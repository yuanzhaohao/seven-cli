#!/usr/bin/env node

const program = require('commander');
const exists = require('fs').existsSync;
const path = require('path');
const ora = require('ora');
const chalk = require('chalk');
const inquirer = require('inquirer');
const utils = require('../lib/utils');
const logger = require('../lib/logger');
const prompts = require('../lib/init/prompts');
const generate = require('../lib/init/generate');
const checkVersion = require('../lib/check-version');

program
  .usage('[project-name]')
  .parse(process.argv);

/**
 * help
 */
program.on('--help', function () {
  console.log();
  console.log('  Examples:')
  console.log()
  console.log(chalk.gray('    # create a new project'))
  console.log('    $ seven init ${project-name}')
  console.log()
});

/**
 * Padding
 */
console.log();
process.on('exit', function() {
  console.log();
});

/**
 * Settings
 */
const rawName = program.args[0];
const inPlace = !rawName || rawName === '.';
const name = inPlace
  ? path.relative('../', process.cwd())
  : rawName;
const to = path.resolve(rawName || '.');
const isExists = exists(to);
let template;
let opts;

if (isExists) {
  prompts.unshift({
    type: 'confirm',
    message: inPlace
      ? 'Generate project in current directory?'
      : 'Target directory exists. Continue?',
    name: 'ok'
  });
}

inquirer.prompt(prompts).then(function(answers) {
  opts = Object.assign(answers, { name });
  template = utils.ownDir('./templates/' + answers.template);

  if (!exists(template)) {
    return;
  }
  if (isExists) {
    if (answers.ok) {
      run();
    }
  } else {
    run();
  }
});

function run() {
  checkVersion(function() {
    let spinner = ora('generate project...');
    spinner.start();
    generate(opts, template, to, function(err) {
      spinner.stop();
      if (err) logger.fatal(err);

      console.log()
      logger.success('Generated "%s".', name);

      if (inPlace) {
        // utils.exec('cd', [ utils.cwd(name) ], {
        //   stdio: 'inherit',
        //   errorMessage: `cd ${name} error`
        // });
        installDependencies();
      } else {
        const message = `To get started:\n\n  ${!inPlace ? `cd ${name}` : ''}\n  npm install\n  npm run dev\n\n`
        console.log('\n' + message.split(/\r?\n/g).map(function (line) {
          return '   ' + line
        }).join('\n'));
      }
    });
  });
}

function installDependencies() {
  console.log()
  console.log('install dependencies...');
  spinner = ora('install dependencies...');
  spinner.start();
  utils.exec('npm', [ 'install' ], {
    stdio: 'inherit',
    errorMessage: 'install dependencies error'
  });
  spinner.stop();
}
