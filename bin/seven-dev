#!/usr/bin/env node

// check config
const checkConfig = require('../lib/check-config');
checkConfig();

/**
 * program start
 */
const path = require('path');
const program = require('commander');
const express = require('express');
const webpack = require('webpack');
const webpackConfig = require('../lib/webpack.dev.config');
const utils = require('../lib/utils');
const logger = require('../lib/logger');
const config = require(utils.cwd('./abc.json'));

program
  .option('-p,--port [port]', 'Server port')
  .option('-H,--host [host]', 'Server host')
  .parse(process.argv);

const port = program.port || 7777;
const host = program.host || 'localhost';
const server = express();
const compiler = webpack(webpackConfig);

server.use('/static', express.static(path.join(process.cwd(), './static')));
server.use(require('connect-history-api-fallback')());

server.use(require('webpack-dev-middleware')(compiler, {
  quiet: true
}));
server.use(require('webpack-hot-middleware')(compiler, {
  heartbeat: 2000,
  log: false
}));

// proxy api requests
if (config.proxyTable && Object.keys(config.proxyTable).length > 0) {
  const proxyMiddleware = require('http-proxy-middleware');

  Object.keys(config.proxyTable).forEach(function (context) {
    let options = config.proxyTable[context];
    if (typeof options === 'string') {
      options = {
        target: options
      };
    }
    server.use(proxyMiddleware(options.filter || context, options));
  });
}

server.listen(port, function(err) {
  if (err) logger.fatal(err);
  const uri = `http://${host}:${port}`;
  console.log(`Listening at ${uri}\n`);
});
