#!/usr/bin/env node

const fs = require('fs-extra');
const path = require('path');
const ora = require('ora');
const rm = require('rimraf');
const chalk = require('chalk');
const program = require('commander');
const webpack = require('webpack');
const webpackConfig = require('../lib/webpack.prod.config');
const logger = require('../lib/logger');
const config = require(cwd('./abc.json'));

program
  .option('-p,--path [port]', 'Dist path')
  .parse(process.argv);

/**
 * Padding
 */
console.log();
process.on('exit', function() {
  console.log();
});

const assetsRoot = cwd(program.path || config.assetsRoot);
const spinner = ora('building for production...');

webpackConfig.output.path = assetsRoot;
spinner.start();

rm(assetsRoot, err => {
  if (err) logger.fatal(err);

  fs.copySync(cwd(config.staticPath), path.join(assetsRoot, config.staticPath));
  webpack(webpackConfig, function (err, stats) {
    spinner.stop();
    if (err) logger.fatal(err);

    process.stdout.write(stats.toString({
      colors: true,
      modules: false,
      children: false,
      chunks: false,
      chunkModules: false
    }) + '\n\n');

    if (stats.hasErrors()) logger.fatal('  Build failed with errors.\n');
  })
});

function cwd(file) {
  return path.resolve(file || '')
}
